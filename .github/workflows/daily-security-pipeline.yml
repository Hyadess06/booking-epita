name: security-pipeline

on:
  workflow_dispatch: # Manual trigger for testing

jobs:
  DependenciesAnalysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Install OSV Scanner
        run: |
          echo "üîç Downloading OSV Scanner..."
          curl -LO https://github.com/google/osv-scanner/releases/latest/download/osv-scanner-linux-amd64
          chmod +x osv-scanner-linux-amd64
          sudo mv osv-scanner-linux-amd64 /usr/local/bin/osv-scanner
          echo "‚úÖ OSV Scanner installed."

      - name: Run OSV Scanner
        run: |
          echo "üîç Running OSV Scanner with format and output..."
          mkdir -p reports
          osv-scanner --format json --output reports/osv-results.sarif ./app
          echo "‚úÖ Scan complete. SARIF report generated at reports/osv-results.sarif"
      
      - name: Upload OSV Report to Security Dashboard
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/osv-results.sarif
          
  SourceCodeAnalysis:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Run Semgrep Analysis
        run: |
          mkdir -p reports
          semgrep --config=p/java --output=reports/semgrep-results.sarif --sarif .
      
      - name: Upload Semgrep Report to Security Dashboard
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/semgrep-results.sarif
